[project]
name = "axi4lite_reg_generator"
dynamic = ["version"]
description = "Template based VHDL register generator"
authors = [
    { name = "Kyle O'Brien", email = "<kyle@keelfw.com>" }
]
license = "lgpl"
readme = "README.md"
packages = [
    { include = "axi4lite_reg_generator" }
]
requires-python = ">=3.9"

[tool.poetry]
version = "0.0.0"

[tool.poetry-dynamic-versioning]
enable = true

[tool.poetry.dependencies]
python = "^3.9"
Jinja2 = "^3.1.4"
schema = "^0.7.7"
argparse = "^1.4.0"

[tool.poetry.scripts]
test = "pytest:main"
axi4lite_reg_generator = "axi4lite_reg_generator.__main__:main"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.1.0"
ruff = "^0.9.3"
coverage = "^7.3.2"
pytest-cov = "^4.1.0"
pytest = "^7.4.3"
cocotb = "^1.9.1"
cocotb-bus = "^0.2.1"
cocotb-test = "^0.2.5"

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = ["plugin"] }

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.coverage.run]
branch = true
source = ["axi4lite_reg_generator"]
omit = ["*.vhd", "test/*", "axi4lite_reg_generator/templates/*"]

[tool.coverage.report]
fail_under = 80
show_missing = true

[tool.mypy]
files = "axi4lite_reg_generator tests"
ignore_missing_imports = true

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]

[tool.ruff.format]
quote-style = "single"
